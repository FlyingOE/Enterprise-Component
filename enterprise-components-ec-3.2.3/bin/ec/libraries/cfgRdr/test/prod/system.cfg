KDB_BIN_PATH = ${EC_SYS_PATH}/bin/${KDB_SERVICE_ID}
KDB_DATA_PATH = ${EC_SYS_PATH}/data/${KDB_SERVICE_ID}             
KDB_LOG_PATH = ${EC_SYS_PATH}/log/${KDB_SERVICE_ID}
KDB_BASE_PORT = 9000
start_wait = 0.1
stop_wait = 0.1
kdb_user = "tu"
kdb_password = "0x5f5e005b4a5858"
#u_opt = U
#u_file = ${EC_SYS_PATH}/data/shared/security/${KDB_SERVICE_ID}.txt

KDB_LIB_PATH = ${QHOME}/lib,${EC_SYS_PATH}/bin/shared, ${EC_SYS_PATH}/bin/${KDB_SERVICE_ID}
KDB_DLL_PATH = ${QHOME}/lib,${EC_SYS_PATH}/bin/shared, ${EC_SYS_PATH}/bin/${KDB_SERVICE_ID}
KDB_ETC_PATH = ${EC_SYS_PATH}/etc/

KDB_LOG_LEVEL = INFO
KDB_LOG_DEST = FILE,STDERR
KDB_LOG_ROTATE = 01:00:00

KDB_EVENT_DEST = MONITOR, LOG
KDB_EVENT_MEM_HIST_SIZE = 1000
KDB_EVENT_PATH = ${EC_SYS_PATH}/data/shared/events/

housekeeping = ()
export = KDB_.*

cpu_affinity = 0

[group:dev]

  [[in.feedRtr]]
  type = q:feedRtr 
  qsd = feedRtr.qsd
  port = ${KDB_BASE_PORT} + 10
  command = "q32 feedRtr.q -w 10000"
  cfg.service = IDN_SELECTFEED
  cfg.ssllib = ssled/ssled
  cfg.serverDst = in.tickHF
  cfg.prefixcut = 3
  
  [[in.tickHF]]
  type = q:tickHF 
  qsd = tickHF.qsd
  port = ${KDB_BASE_PORT} + 20  
  command = "q tickHF.q -w 5000"

  [[in.tickHFAggr]]
  KDB_BIN_PATH = ${EC_SYS_PATH}/bin/in.tickHF
  KDB_LIB_PATH = ${QHOME}/lib,${EC_SYS_PATH}/bin/shared, ${EC_SYS_PATH}/bin/in.tickHF
  type = q:tickHF 
  qsd = tickHF.qsd
  port = ${KDB_BASE_PORT} + 19  
  command = "q tickHF.q -w 5000"

  [[in.tickLF]]
  type = q:tickLF
  qsd = tickLF.qsd
  port = ${KDB_BASE_PORT} + 21
  command = "q tickLF.q -w 5000"

  [[in.feedMng]]
  type = q:feedMng
  #qsd = feedMng.qsd, demolib/feedMngPlugin.qsd
  qsd = feedMng.qsd
  port = ${KDB_BASE_PORT} + 12
  command = "q feedMng.q -lib demolib/feedMngPlugin.q -w 5000"
  cfg.serverAux = admin.ap
        
  [[in.feedCsv]]
  type = q:feedCsv
  qsd = feedCsv.qsd
  port = ${KDB_BASE_PORT} + 11
  command = "q feedCsv.q -lib tickLFPublisher.q demolib/feedCsvPlugin.q -w 5000"
  cfg.serverDst = in.tickLF
  
  [[core.rdb]]
  type = q:rdb
  qsd = rdb.qsd
  port = ${KDB_BASE_PORT} + 30
  command = "q rdb.q -w 90000"

  [[core.hdb]]
  type = q:hdb
  qsd = hdb.qsd
  port = ${KDB_BASE_PORT} + 31
  command = "q hdb.q -w 5000"
  
  [[core.eodMng]]
  type = q:eodMng
  qsd = eodMng.qsd
  port = ${KDB_BASE_PORT} + 32
  command = "q eodMng.q -w 5000"
  cfg.rdbName = core.rdb
  cfg.eodMngList = core.eodMng, prod2.core_eodMng
  cfg.hdbConn = core.hdb
  cfg.hdbDirs = ${EC_SYS_PATH}/data/core.hdb, ts-401:/kdb/DevSystem2/data/core.hdb
  cfg.syncProcessName = batch.core_hdbSync
  cfg.hkProcessName = batch.core_hdbHk

  [[batch.core_hdbHk]]
  KDB_BIN_PATH = ${EC_SYS_PATH}/bin/core.eodMng
  KDB_LIB_PATH = ${QHOME}/lib,${EC_SYS_PATH}/bin/shared, ${EC_SYS_PATH}/bin/core.eodMng
  type = b:hdbHk
  qsd = hdbHk.qsd
  port = 0
  command = "q hdbHk.q -w 5000"
  cfg.bckDays = 1 
 
  [[batch.core_hdbSync]]
  KDB_BIN_PATH = ${EC_SYS_PATH}/bin/core.eodMng
  KDB_LIB_PATH = ${QHOME}/lib,${EC_SYS_PATH}/bin/shared, ${EC_SYS_PATH}/bin/core.eodMng
  type = b:hdbSynch
  port = 0
  command = "q hdbSync.q -w 5000"
  
  [[stream.replicator]]
  type = q:rep
  qsd = stream.qsd, streamReplicator.qsd
  port = ${KDB_BASE_PORT} + 33
  command = "q stream.q -lib streamReplicator.q -w 20000"
  cfg.dstServer = prod2.in_tickHF
  cfg.tsInterval = 100
  #cfg.master= FALSE
  
  [[stream.mrvs]]
  type = q:mrvs
  qsd = stream.qsd, streamMrvs.qsd
  port = ${KDB_BASE_PORT} + 34
  command = "q stream.q -lib streamMrvs.q -w 20000"

  [[mrvs.hdb]]
  type = q:hdb
  qsd = hdb.qsd
  port = ${KDB_BASE_PORT} + 35
  command = "q hdb.q -w 5000"
  
  [[mrvs.eodMng]]
  type = q:eodMng
  qsd = eodMng.qsd
  port = ${KDB_BASE_PORT} + 36
  command = "q eodMng.q -w 5000"
  cfg.rdbName = stream.mrvs
  cfg.eodMngList = mrvs.eodMng, prod2.mrvs_eodMng
  cfg.hdbConn = mrvs.hdb
  cfg.hdbDirs = ${EC_SYS_PATH}/data/mrvs.hdb, ts-401:/kdb/DevSystem2/data/mrvs.hdb
  cfg.syncProcessName = batch.mrvs_hdbSync
  cfg.hkProcessName = batch.mrvs_hdbHk

  [[batch.mrvs_hdbHk]]
  KDB_BIN_PATH = ${EC_SYS_PATH}/bin/mrvs.eodMng
  KDB_LIB_PATH = ${QHOME}/lib,${EC_SYS_PATH}/bin/shared, ${EC_SYS_PATH}/bin/mrvs.eodMng
  type = b:hdbHk
  qsd = hdbHk.qsd
  port = 0
  command = "q hdbHk.q -w 5000"
  cfg.bckDays = 1 
 
  [[batch.mrvs_hdbSync]]
  KDB_BIN_PATH = ${EC_SYS_PATH}/bin/mrvs.eodMng
  KDB_LIB_PATH = ${QHOME}/lib,${EC_SYS_PATH}/bin/shared, ${EC_SYS_PATH}/bin/mrvs.eodMng
  type = b:hdbSynch
  port = 0
  command = "q hdbSync.q -w 5000"
  
  [[stream.snap]]
  type = q:snap
  qsd = stream.qsd, streamSnap.qsd
  port = ${KDB_BASE_PORT} + 37
  command = "q stream.q -lib streamSnap.q -w 20000"
  cfg.tsInterval = 1000
  cfg.snapMinuteBase = 1
  
  [[stream.aggr]]
  type = q:aggr
  qsd = stream.qsd, streamAggr.qsd
  port = ${KDB_BASE_PORT} + 38
  command = "q stream.q -lib streamAggr.q -w 20000"
  cfg.tsInterval = 1000
 
  [[aggr.rdb]]
  type = q:rdb
  qsd = rdb.qsd
  port = ${KDB_BASE_PORT} + 39
  command = "q rdb.q -w 90000"

  [[stream.wdb]]
  type = q:wdb
  qsd = stream.qsd, streamWdb.qsd
  port = ${KDB_BASE_PORT} + 40 
  command = "q stream.q -lib streamWdb.q -w 20000"
  cfg.dataDumpInterval = 10

  [[wdb.hdb]]
  type = q:hdb
  qsd = hdb.qsd
  port = ${KDB_BASE_PORT} + 41
  command = "q hdb.q -w 5000"
 
[group:access]

  [[access.ap]]
  type = q:accessPoint
  qsd = accessPoint.qsd
  port = ${KDB_BASE_PORT} + 50
  command = "q accessPoint.q -lib demolib/apPlugin query/query -w 5000"
  cfg.serverAux = core.rdb, core.hdb, stream.mrvs, mrvs.hdb

  [[access.ap2]]
  type = q:accessPoint
  qsd = accessPoint.qsd
  port = ${KDB_BASE_PORT} + 51
  command = "q accessPoint.q -lib demolib/apPlugin query/query -w 5000"
  cfg.serverAux = core.rdb, core.hdb, stream.mrvs, mrvs.hdb
 
[group:adminGr]

  [[admin.monitor]]
  type = q:monitor
  qsd = monitor.qsd
  port = ${KDB_BASE_PORT} + 60
  command = "q monitor.q -w 5000"
  cfg.procMaskList = ALL
  cfg.monitorStatusPublishing = FALSE
  cfg.eventDir = ${EC_SYS_PATH}/data/shared/events/monitor_transfer/events/

  [[admin.rdb]]
  type = q:rdb
  qsd = rdb.qsd
  port = ${KDB_BASE_PORT} + 61
  command = "q rdb.q -w 20000"


  [[admin.hdb]]
  multithreaded = 1
  type = q:hdb
  qsd = hdb.qsd
  port = ${KDB_BASE_PORT} + 62
  command = "q hdb.q -w 5000"

  [[admin.ap]]
  type = q:accessPoint
  qsd = accessPoint.qsd
  port = ${KDB_BASE_PORT} + 63
  command = "q accessPoint.q -lib demolib/admin.q -w 5000"
  cfg.serverAux = admin.rdb, admin.hdb, core.rdb, core.hdb, mrvs.rdb, mrvs.hdb

  [[batch.admin_genPass]]
  u_file=
  u_opt=
  type = b:genPass
  qsd = genPass.qsd
  port = 0
  command = "q genPass.q -w 5000"

  [[batch.admin_refreshPerm]]
  u_file = ""
  u_opt = ""
  type = b:refreshPerm
  qsd = refreshPerm.qsd
  port = 0
  command = "q refreshPerm.q -w 5000"

  [[batch.admin_replay]]
  KDB_BIN_PATH = ${EC_SYS_PATH}/bin/core.rdb
  KDB_LIB_PATH = ${QHOME}/lib,${EC_SYS_PATH}/bin/shared
  u_file = ""
  u_opt = ""
  type = b:replay
  port = 0
  command = "q replay.q"

[group:test]

  [[test.gen]]
  type = q:gen
  qsd = gen.qsd
  port = ${KDB_BASE_PORT} + 1
  command = "q gen.q"
  cfg.minPkgCnt = 2
  cfg.updFreq = 2000
  cfg.timeout = 1000
  cfg.runTime = 00:00:30.000
  cfg.seed = 269157

  [[test.genRefData]]
  KDB_BIN_PATH = ${EC_SYS_PATH}/bin/test.gen
  type = q:gen
  qsd = gen.qsd
  port = ${KDB_BASE_PORT} + 2
  command = "q genRefData.q"
  cfg.dstTick = in.tickHF
  
  
  [[batch.tests]]
  u_opt = 
  type = q:tests
  port = ${KDB_BASE_PORT} + 99
  command = "q integration_test.q --noquit"
  

[group:prod2]
KDB_BASE_PORT = 19000
  [[prod2.core_eodMng]]
  type = c:eodMng
  port = ${KDB_BASE_PORT} + 32
  host = ts-401.hps.devnet.lan
  
  [[prod2.mrvs_eodMng]]
  type = c:eodMng
  port = ${KDB_BASE_PORT} + 36
  host = ts-401.hps.devnet.lan

  [[prod2.in_tickHF]]
  type = c:tickHF
  port = ${KDB_BASE_PORT} + 20
  host = ts-401.hps.devnet.lan

